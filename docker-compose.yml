version: '3.7'
networks:
  hmpps:

services:
  hmpps-auth:
    image: wiremock/wiremock
    container_name: hmpps-auth
    networks:
      - hmpps
    volumes:
      - ./wiremock/mappings/hmpps-auth:/home/wiremock/mappings
    entrypoint: ["/docker-entrypoint.sh", "--disable-request-logging", "--disable-banner", "--global-response-templating"] #"--verbose"
    restart: always
    ports:
      - "9091:8080"

  hmpps-user-preferences:
    image: wiremock/wiremock
    container_name: hmpps-user-preferences
    networks:
      - hmpps
    entrypoint: ["/docker-entrypoint.sh", "--disable-request-logging", "--disable-banner", "--global-response-templating"]
    volumes:
      - ./wiremock/mappings/hmpps-user-preferences:/home/wiremock/mappings
    restart: always
    ports:
      - "9093:8080"

  court-case-service:
    image: wiremock/wiremock
    container_name: court-case-service
    networks:
      - hmpps
    entrypoint: ["/docker-entrypoint.sh", "--disable-request-logging", "--disable-banner", "--global-response-templating"]
    volumes:
      - ./wiremock/mappings/court-case-service:/home/wiremock/mappings
      - ./wiremock/__files:/home/wiremock/__files
    restart: always
    ports:
      - "9092:8080"

  redis:
    image: 'bitnami/redis:5.0'
    networks:
      - hmpps
    container_name: prepare-a-case-redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ] # ping redis and write to a key to ensure service is up

  app:
    build: 
      context: .
      dockerfile: ./Dockerfile
      target: development
    container_name: prepare-a-case-app
    volumes:
      - ./bin:/usr/src/app/bin
      - ./server:/usr/src/app/server
      - ./public:/usr/src/app/public
      - ./tests:/usr/src/app/tests
      - ./pact:/usr/src/app/pact
      - ./schemas:/usr/src/app/schemas
      - ./wiremock:/usr/src/app/wiremock
    environment:
      - REDIS_HOST=redis
      - PORT=3007
      - PAC_ENV=dev
      - NODE_ENV=development
      - ENABLE_APP_INSIGHTS=false
      - API_CLIENT_ID=prepare-a-case-for-court
      - API_CLIENT_SECRET=clientsecret
      - APP_VERSION=dev-build
      - NOMIS_AUTH_URL=http://hmpps-auth:8080/auth
      - NOMIS_AUTH_URL_REDIRECT=http://localhost:9091/auth
      - NOMIS_DISABLE_OAUTH_STATE=true
      - REDUCE_STDOUT_NOISE=true
      - USER_PREFERENCE_SERVICE_URL=http://hmpps-user-preferences:8080
      - COURT_CASE_SERVICE_URL=http://court-case-service:8080
      - NOTIFICATION_USERNAME=test 
      - NOTIFICATION_PASSWORD=test 
      - HEARING_OUTCOMES_PAGE_SIZE=${HEARING_OUTCOMES_PAGE_SIZE:-2}
      - ENABLE_CASE_COMMENTS=${ENABLE_CASE_COMMENTS:-true}
      - ENABLE_CASE_PROGRESS=${ENABLE_CASE_PROGRESS:-true}
      - ENABLE_HEARING_OUTCOMES=${ENABLE_HEARING_OUTCOMES:-true}
      - ENABLE_PAST_CASES_NAVIGATION=${ENABLE_PAST_CASES_NAVIGATION:-true}
    env_file:
      - .env
    networks:
      - hmpps
    depends_on:
      redis:
        condition: service_healthy
      hmpps-auth:
        condition: service_started
      court-case-service:
        condition: service_started
      hmpps-user-preferences:
        condition: service_started
    ports:
      - '3007:3007'
    restart: always

  cypress:
    build: 
      context: .
      dockerfile: ./integration-tests/Dockerfile
    network_mode: host
    container_name: prepare-a-case-cypress
    environment:
      - CYPRESS_FAIL_FAST_ENABLED=true
      - CYPRESS_CASES_TOTAL_DAYS=${CASES_TOTAL_DAYS:-28}
      - DISPLAY=${DISPLAY}
    working_dir: /e2e
    command: ["open", "-C", "cypress/cypress.config.js"]
    volumes:
      #mac
      - /tmp/.X11-unix:/tmp/.X11-unix
      #linux
      #- ~/.Xauthority:/root/.Xauthority:rw
      #end
      - ./server:/e2e/server
      - ./integration-tests/cypress:/e2e/cypress
      - ./integration-tests/output:/e2e/output
