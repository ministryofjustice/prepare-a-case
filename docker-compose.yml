version: '3.7'
networks:
  hmpps:

services:
  hmpps-auth:
    image: wiremock/wiremock:3.3.1
    container_name: hmpps-auth
    networks:
      - hmpps
    volumes:
      - ./wiremock/mappings/hmpps-auth:/home/wiremock/mappings
    entrypoint: ["/docker-entrypoint.sh", "--disable-request-logging", "--disable-banner", "--global-response-templating"] #"--verbose"
    restart: always
    ports:
      - "9091:8080"

  hmpps-user-preferences:
    build: hmpps-user-preferences
    container_name: hmpps-user-preferences
    networks:
      - hmpps
    restart: always
    ports:
      - "9093:3000"

  court-case-service:
    image: wiremock/wiremock:3.3.1
    container_name: court-case-service
    networks:
      - hmpps
    entrypoint: ["/docker-entrypoint.sh", "--disable-request-logging", "--disable-banner", "--global-response-templating", "--verbose"]
    volumes:
      - ./wiremock/mappings/court-case-service:/home/wiremock/mappings
      - ./wiremock/__files:/home/wiremock/__files
    restart: always
    ports:
      - "9092:8080"

  redis:
    image: 'bitnami/redis:7.2.4'
    networks:
      - hmpps
    container_name: prepare-a-case-redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ] # ping redis and write to a key to ensure service is up

  app:
    build: 
      context: .
      dockerfile: ./Dockerfile
      target: development
    container_name: prepare-a-case-app
    volumes:
      - ./bin:/usr/src/app/bin
      - ./server:/usr/src/app/server
      - ./public:/usr/src/app/public
      - ./tests:/usr/src/app/tests
      - ./pact:/usr/src/app/pact
      - ./schemas:/usr/src/app/schemas
      - ./wiremock:/usr/src/app/wiremock
    environment:
      - REDIS_HOST=redis
      - PORT=3000
      - PAC_ENV=dev
      - NODE_ENV=development
      - ENABLE_APP_INSIGHTS=false
      - API_CLIENT_ID=${API_CLIENT_ID:-prepare-a-case-for-court}
      - API_CLIENT_SECRET=${API_CLIENT_SECRET:-clientsecret}
      - APP_VERSION=dev-build
      - NOMIS_AUTH_URL=${NOMIS_AUTH_URL:-http://hmpps-auth:8080/auth}
      - NOMIS_AUTH_URL_REDIRECT=${NOMIS_AUTH_URL:-http://localhost:9091/auth}
      - NOMIS_DISABLE_OAUTH_STATE=${NOMIS_DISABLE_OAUTH_STATE:-true}
      - REDUCE_STDOUT_NOISE=true
      - USER_PREFERENCE_SERVICE_URL=${USER_PREFERENCE_SERVICE_URL:-http://hmpps-user-preferences:3000}
      - COURT_CASE_SERVICE_URL=${COURT_CASE_SERVICE_URL:-http://court-case-service:8080}
      - NOTIFICATION_USERNAME=test 
      - NOTIFICATION_PASSWORD=test 
      - HEARING_OUTCOMES_PAGE_SIZE=${HEARING_OUTCOMES_PAGE_SIZE:-2}
      - ENABLE_CASE_COMMENTS=${ENABLE_CASE_COMMENTS:-true}
      - ENABLE_CASE_PROGRESS=${ENABLE_CASE_PROGRESS:-true}
      - ENABLE_WORKFLOW=${ENABLE_WORKFLOW:-true}
      - ENABLE_HEARING_OUTCOMES=${ENABLE_HEARING_OUTCOMES:-true}
      - ENABLE_PAST_CASES_NAVIGATION=${ENABLE_PAST_CASES_NAVIGATION:-true}
      - ENABLE_MOVE_TO_RESULTED_ACTION=${ENABLE_MOVE_TO_RESULTED_ACTION:-true}
    env_file:
      - .env
    networks:
      - hmpps
    depends_on:
      redis:
        condition: service_healthy
      hmpps-auth:
        condition: service_started
      court-case-service:
        condition: service_started
      hmpps-user-preferences:
        condition: service_started
    ports:
      - '3000:3000'
      - '9229:9229'
    restart: always

